//-------------------------------------------------------------------
// Мини-библиотека с классом карты для наглядного представления
//-------------------------------------------------------------------
#include <iostream>
//-------------------------------------------------------------------
const char EMPTY_CELL = '.'; // Отображение пустой ячейки
//-------------------------------------------------------------------
// Класс игровой карты (рисуется ASCII-графикой в терминале)
class DrawingMap
{
 public:

    size_t w, h;   // Ширина и высота карты
    char **matrix; // Матрица (двумерный массив) символов

    // Конструктор объекта со списком инициализации
    DrawingMap(size_t width, size_t height): w(width), h(height)
    {
        matrix = new char*[h];
        for (size_t i = 0; i < h; ++i)
        {
            matrix[i] = new char[w];
            for (size_t j = 0; j < w; ++j)
                matrix[i][j] = EMPTY_CELL;
        }
    }

    // Обязательный деструктор, который почистит память
    ~DrawingMap()
    {
        for (size_t i = 0; i < h; ++i)
            delete[] matrix[i];
        delete[] matrix;
    }

    // Отрисовать карту
    void draw()
    {
        for (size_t i = 0; i < h; ++i)
        {
            for (size_t j = 0; j < w; ++j)
                std::cout << matrix[i][j];
            std::cout << '\n';
        }
        std::cout << std::endl;
    }

    // Для удобства обращения к элементам матрицы
    char* operator[](size_t index)
    {
        // Надо бы проверочки на выход индекса за пределы сделать
        return matrix[index]; // Но лень
    }
};
//-------------------------------------------------------------------
//                                                       By SnipGhost
//-------------------------------------------------------------------